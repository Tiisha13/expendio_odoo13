{
    "info": {
        "_postman_id": "expensio-backend-api",
        "name": "Expensio Backend API",
        "description": "Complete API collection for Expensio - Expense Management System\n\n## Features:\n- JWT Authentication with Refresh Tokens\n- User & Company Management\n- Multi-Currency Expense Tracking\n- Multi-Level Approval Workflows\n- OCR Receipt Processing\n\n## Setup:\n1. Set environment variables (baseUrl, accessToken, refreshToken)\n2. Run Signup or Login to get tokens\n3. Tokens are automatically saved to environment\n\n## Base URL:\nLocal: http://localhost:8080",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "auth": {
        "type": "bearer",
        "bearer": [
            {
                "key": "token",
                "value": "{{accessToken}}",
                "type": "string"
            }
        ]
    },
    "item": [
        {
            "name": "Health Check",
            "item": [
                {
                    "name": "Health Check",
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/health",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "health"
                            ]
                        },
                        "description": "Check if the server is running and healthy"
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Authentication",
            "item": [
                {
                    "name": "Signup (Create Company & Admin)",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 201) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.data && jsonData.data.access_token) {",
                                    "        pm.environment.set(\"accessToken\", jsonData.data.access_token);",
                                    "        pm.environment.set(\"refreshToken\", jsonData.data.refresh_token);",
                                    "        pm.environment.set(\"userId\", jsonData.data.user.id);",
                                    "        pm.environment.set(\"companyId\", jsonData.data.user.company_id);",
                                    "        console.log(\"Tokens saved to environment\");",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"admin@acmecorp.com\",\n  \"password\": \"Admin@123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"company_name\": \"Acme Corporation\",\n  \"country\": \"US\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/signup",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "auth",
                                "signup"
                            ]
                        },
                        "description": "Register a new user and automatically create a company. The first user becomes the admin. Company currency is auto-detected from country code using RestCountries API."
                    },
                    "response": []
                },
                {
                    "name": "Login",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.data && jsonData.data.access_token) {",
                                    "        pm.environment.set(\"accessToken\", jsonData.data.access_token);",
                                    "        pm.environment.set(\"refreshToken\", jsonData.data.refresh_token);",
                                    "        pm.environment.set(\"userId\", jsonData.data.user.id);",
                                    "        pm.environment.set(\"companyId\", jsonData.data.user.company_id);",
                                    "        console.log(\"Tokens saved to environment\");",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"admin@acmecorp.com\",\n  \"password\": \"Admin@123\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/login",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "auth",
                                "login"
                            ]
                        },
                        "description": "Login with email and password. Returns access token (15min) and refresh token (7 days)."
                    },
                    "response": []
                },
                {
                    "name": "Refresh Token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    var jsonData = pm.response.json();",
                                    "    if (jsonData.data && jsonData.data.access_token) {",
                                    "        pm.environment.set(\"accessToken\", jsonData.data.access_token);",
                                    "        console.log(\"Access token refreshed\");",
                                    "    }",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"refresh_token\": \"{{refreshToken}}\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/refresh",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "auth",
                                "refresh"
                            ]
                        },
                        "description": "Get a new access token using refresh token when access token expires."
                    },
                    "response": []
                },
                {
                    "name": "Logout",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "exec": [
                                    "if (pm.response.code === 200) {",
                                    "    pm.environment.unset(\"accessToken\");",
                                    "    pm.environment.unset(\"refreshToken\");",
                                    "    console.log(\"Tokens cleared from environment\");",
                                    "}"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/auth/logout",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "auth",
                                "logout"
                            ]
                        },
                        "description": "Logout and invalidate tokens. Tokens are blacklisted in Redis."
                    },
                    "response": []
                }
            ],
            "description": "Authentication endpoints for signup, login, token refresh, and logout"
        },
        {
            "name": "User Management",
            "item": [
                {
                    "name": "Create User (Admin Only)",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"email\": \"manager@acmecorp.com\",\n  \"password\": \"Manager@123\",\n  \"first_name\": \"Jane\",\n  \"last_name\": \"Smith\",\n  \"role\": \"manager\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users"
                            ]
                        },
                        "description": "Create a new user in the company. Only admins can create users. Available roles: admin, manager, employee"
                    },
                    "response": []
                },
                {
                    "name": "List Users (Admin/Manager)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/users",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users"
                            ]
                        },
                        "description": "Get list of all users in the company. Cached for 15 minutes."
                    },
                    "response": []
                },
                {
                    "name": "Get User by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/users/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "{{userId}}",
                                    "description": "User ID"
                                }
                            ]
                        },
                        "description": "Get details of a specific user"
                    },
                    "response": []
                },
                {
                    "name": "Update User Role (Admin Only)",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"role\": \"manager\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/users/:id/role",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users",
                                ":id",
                                "role"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "User ID"
                                }
                            ]
                        },
                        "description": "Update a user's role. Available roles: admin, manager, employee"
                    },
                    "response": []
                },
                {
                    "name": "Assign Manager (Admin/Manager)",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"manager_id\": \"<manager_user_id>\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/users/:id/manager",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users",
                                ":id",
                                "manager"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "Employee User ID"
                                }
                            ]
                        },
                        "description": "Assign a manager to an employee for approval hierarchy"
                    },
                    "response": []
                },
                {
                    "name": "Delete User (Admin Only)",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/users/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "users",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "User ID"
                                }
                            ]
                        },
                        "description": "Delete a user from the company"
                    },
                    "response": []
                }
            ],
            "description": "User management endpoints for creating, updating, and managing users"
        },
        {
            "name": "Expense Management",
            "item": [
                {
                    "name": "Create Expense",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"amount\": 150.50,\n  \"currency\": \"USD\",\n  \"category\": \"meals\",\n  \"description\": \"Team lunch at downtown restaurant\",\n  \"expense_date\": \"2025-10-04T12:30:00Z\",\n  \"merchant\": \"The Fancy Restaurant\",\n  \"receipt_url\": \"https://example.com/receipts/receipt123.jpg\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/expenses",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "expenses"
                            ]
                        },
                        "description": "Submit a new expense claim. Amount is automatically converted to company's base currency using ExchangeRate API.\n\nAvailable categories: meals, travel, accommodation, entertainment, office_supplies, software, other"
                    },
                    "response": []
                },
                {
                    "name": "Get My Expenses",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/expenses?page=1&limit=10",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "expenses"
                            ],
                            "query": [
                                {
                                    "key": "page",
                                    "value": "1"
                                },
                                {
                                    "key": "limit",
                                    "value": "10"
                                }
                            ]
                        },
                        "description": "Get paginated list of your expenses. Results are cached for 15 minutes."
                    },
                    "response": []
                },
                {
                    "name": "Get Expense by ID",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/expenses/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "expenses",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "Expense ID"
                                }
                            ]
                        },
                        "description": "Get details of a specific expense"
                    },
                    "response": []
                },
                {
                    "name": "Update Expense",
                    "request": {
                        "method": "PUT",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"amount\": 175.00,\n  \"description\": \"Updated description\",\n  \"merchant\": \"Updated Merchant\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/expenses/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "expenses",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "Expense ID"
                                }
                            ]
                        },
                        "description": "Update an expense. Only the expense owner can update, and only if status is pending."
                    },
                    "response": []
                },
                {
                    "name": "Delete Expense",
                    "request": {
                        "method": "DELETE",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/expenses/:id",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "expenses",
                                ":id"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "Expense ID"
                                }
                            ]
                        },
                        "description": "Delete an expense. Only the owner can delete, and only if status is pending."
                    },
                    "response": []
                },
                {
                    "name": "Get Pending Expenses (Manager/Admin)",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/expenses/pending",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "expenses",
                                "pending"
                            ]
                        },
                        "description": "Get all pending expenses in the company. Only managers and admins can access."
                    },
                    "response": []
                }
            ],
            "description": "Expense management endpoints for creating, viewing, and managing expense claims"
        },
        {
            "name": "Approval Workflow",
            "item": [
                {
                    "name": "Get Pending Approvals",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/approvals/pending",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "approvals",
                                "pending"
                            ]
                        },
                        "description": "Get all expenses pending your approval. Results are cached for 5 minutes."
                    },
                    "response": []
                },
                {
                    "name": "Approve Expense",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"comments\": \"Approved - valid business expense\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/approvals/:id/approve",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "approvals",
                                ":id",
                                "approve"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "Approval ID"
                                }
                            ]
                        },
                        "description": "Approve an expense. System automatically checks approval rules:\n- Sequential: Must approve in order\n- Percentage: Checks if required percentage met\n- Specific Approver: Auto-approves expense if specific person approves\n- Hybrid: Combines all rules"
                    },
                    "response": []
                },
                {
                    "name": "Reject Expense",
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n  \"comments\": \"Rejected - insufficient documentation\"\n}"
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/approvals/:id/reject",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "approvals",
                                ":id",
                                "reject"
                            ],
                            "variable": [
                                {
                                    "key": "id",
                                    "value": "",
                                    "description": "Approval ID"
                                }
                            ]
                        },
                        "description": "Reject an expense with comments. Expense status changes to rejected immediately."
                    },
                    "response": []
                },
                {
                    "name": "Get Approval History",
                    "request": {
                        "method": "GET",
                        "header": [],
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/approvals/history/:expenseId",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "approvals",
                                "history",
                                ":expenseId"
                            ],
                            "variable": [
                                {
                                    "key": "expenseId",
                                    "value": "",
                                    "description": "Expense ID"
                                }
                            ]
                        },
                        "description": "Get complete approval history for an expense showing all approvers, their decisions, and comments."
                    },
                    "response": []
                }
            ],
            "description": "Multi-level approval workflow endpoints for managing expense approvals"
        },
        {
            "name": "OCR Receipt Processing",
            "item": [
                {
                    "name": "Upload Receipt",
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "formdata",
                            "formdata": [
                                {
                                    "key": "receipt",
                                    "type": "file",
                                    "src": []
                                },
                                {
                                    "key": "create_expense",
                                    "value": "true",
                                    "description": "Auto-create expense from OCR data",
                                    "type": "text"
                                }
                            ]
                        },
                        "url": {
                            "raw": "{{baseUrl}}/api/v1/ocr/upload",
                            "host": [
                                "{{baseUrl}}"
                            ],
                            "path": [
                                "api",
                                "v1",
                                "ocr",
                                "upload"
                            ]
                        },
                        "description": "Upload a receipt image (JPG, PNG, PDF) for OCR processing. Tesseract extracts:\n- Amount\n- Date\n- Merchant name\n- Category\n- Currency\n\nSet create_expense=true to automatically create an expense from OCR data.\n\nOCR results are cached for 24 hours."
                    },
                    "response": []
                }
            ],
            "description": "OCR receipt processing endpoints for automatic data extraction"
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [
                    ""
                ]
            }
        }
    ],
    "variable": [
        {
            "key": "baseUrl",
            "value": "http://localhost:8080",
            "type": "string"
        },
        {
            "key": "accessToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "refreshToken",
            "value": "",
            "type": "string"
        },
        {
            "key": "userId",
            "value": "",
            "type": "string"
        },
        {
            "key": "companyId",
            "value": "",
            "type": "string"
        }
    ]
}